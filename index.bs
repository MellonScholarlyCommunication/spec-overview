<pre class='metadata'>
Title: Overview of the ResearcherPod specifications
Shortname: overview
Level: 1
Status: LD
URL: https://mellonscholarlycommunication.github.io/spec-overview
Editor: Miel Vander Sande, [meemoo - Flemish Institute for Archives](https://meemoo.be), miel.vandersande@meemoo.be
Editor: Patrick Hochstenbach, [IDLab - Ghent University](https://knows.idlab.ugent.be), patrick.hochstenbach@ugent.be
Editor: Ruben Dedecker, [IDLab - Ghent University](https://knows.idlab.ugent.be), ruben.dedecker@ugent.be
Editor: Jeroen Werbrouck, [IDLab - Ghent University](https://knows.idlab.ugent.be), Jeroen.Werbrouck@ugent.be
Abstract: This document introduces a set of technical reports that facilitate the implementation of a decentralized data exchange ecosystem using Solid.
Markup Shorthands: markdown yes
</pre>

<style>
table {
  margin: 25px auto;
  border-collapse: collapse;
  border: 1px solid #eee;
  border-bottom: 2px solid #005A9C;
}
table tr:hover {
  background: #f4f4f4;
}
table tr:hover td {
  color: #555;
}
table th, table td {
  color: #999;
  border: 1px solid #eee;
  padding: 12px 12px;
  border-collapse: collapse;
}
table th {
  background: #005A9C;
  color: #fff;
}
table th.last {
  border-right: none;
}
</style>

Set of documents {#set}
=======================

This document is one of the specifications produced by the **ResearcherPod** and **ErfgoedPod** projects:

1. [Overview](/spec-overview/) (this document)
2. [Orchestrator](/spec-orchestrator/) 
3. [Data Pod](/spec-datapod/)
4. [Rule language](/spec-rulelanguage/)
5. [Artefact Lifecycle Event Log](/spec-eventlog/)
6. [Notifications](/spec-notifications/)
7. [Collector](/spec-collector/)

Introduction {#intro}
=====================

This document introduces a set of technical reports that facilitate the implementation of a decentralized data exchange ecosystem using [[solid-protocol]].
Essentially,
these reports focus on two generic problems common to decentralized Web networks:

- executing and automating business processes involving a distributed set of actors.
- discovering and collecting information that is distributed over the network.

This discovery of information that is stored on a decentralized Web can be quite generic. In this project
there is a particular focus on the discovery of lifecycle events to which the artefacts are subject.
Examples of such a lifecycle events in the realm of scholarly publication is information about when and where
articles have been cited, or peer-reviewed, or published in a journal, archived in a web archive.

This work aims to complement the [[solid-tr]] with a concrete framework for building a semi-automated decentralized network for a specific use case or domain.
It is joint output from two aligned projects:

- ResearcherPod: a [Ghent University - IDLab](http://idlab.ugent.be) project funded by the [Andrew W. Mellon foundation](https://mellon.org/) that explores an alternative scholarly communication system that is researcher-centric, institution-enabled, and aligned with Decentralized Web concepts and technologies.
- ErfgoedPod: a collaboration between [Netwerk Digitaal Erfgoed](https://netwerkdigitaalerfgoed.nl), [meemoo - Flemish Institute for Archiving](https://meemoo.be) and [Ghent University - IDLab](http://idlab.ugent.be) to investigate the feasability of applying [Solid](https://solidproject.org/) and Decentralized Web concepts to establish a sustainable exchange network for digital heritage data.

Work items {#work-items}
=====================

The following table provides an overview of all technical reports and subject matter that is being worked on.
The reports incorporated have been discussed among the project members and are constructed as project deliverables.
During the course of these projects, the information in these documents may be subject to change, therefore please see each documentâ€™s publication status and versions for further details.
Of course, you are invited to [contribute](https://github.com/MellonScholarlyCommunication/spec-overview/issues) any feedback, comments, or questions you might have.

<table>
    <caption>Technical Reports</caption>
    <thead>
        <tr>
            <th>Work Item</th>
            <th>Repository</th>
            <th>Current Stage</th>
            <th>Next Stage</th>
            <th>Target</th>
            <th>Expected Completion</th>
        </tr>
    </thead>
    <tbody>
        <tr>
          <td><a href="/spec-overview/" rel="cito:citesForInformation">This document.</a></td>
          <td><a href="https://github.com/mellonscholarlycommunication/spec-overview">spec-overview</a></td>
          <td>Draft Technical Report</td>
          <td>Technical Report</td>
          <td>Technical Report</td>
          <td>Q3 2021</td>
        </tr>
        <tr>
            <td><a href="/spec-orchestrator/" rel="cito:citesForInformation">Specification of the Orchestrator component.</a></td>
            <td><a href="https://github.com/mellonscholarlycommunication/spec-orchestrator">spec-orchestrator</a></td>
            <td>Working Draft</td>
            <td>Draft Technical Report</td>
            <td>Technical Report</td>
            <td>Q4 2021</td>
        </tr>
        <tr>
            <td><a href="/spec-datapod/" rel="cito:citesForInformation">Implementation guidelines and additional requirements for Solid data pods.</a></td>
            <td><a href="https://github.com/mellonscholarlycommunication/spec-datapod">spec-datapod</a></td>
            <td>Working Draft</td>
            <td>Draft Technical Report</td>
            <td>Technical Report</td>
            <td>Q4 2021</td>
        </tr>
        <tr>
            <td><a href="/spec-rulelanguage/" rel="cito:citesForInformation">Specification of the rule language to create executable business processes.</a></td>
            <td><a href="https://github.com/mellonscholarlycommunication/spec-rulelanguage">spec-rulelanguage</a></td>
            <td>Working Draft</td>
            <td>Draft Technical Report</td>
            <td>Technical Report</td>
            <td>2022</td>
        </tr>
        <tr>
            <td><a href="/spec-eventlog/" rel="cito:citesForInformation">Implementation requirements for the Artefact Lifecycle Event Log.</a></td>
            <td><a href="https://github.com/mellonscholarlycommunication/spec-datapod">spec-datapod</a></td>
            <td>Working Draft</td>
            <td>Draft Technical Report</td>
            <td>Technical Report</td>
            <td>2022</td>
        </tr>
        <tr>
            <td><a href="/spec-notifications/" rel="cito:citesForInformation">Specification of the possible notifications that can be used in the network.</a></td>
            <td><a href="https://github.com/mellonscholarlycommunication/spec-notifications">spec-notifications</a></td>
            <td>Draft Technical Report</td>
            <td>Technical Report</td>
            <td>Technical Report</td>
            <td>2022</td>
        </tr>
        <tr>
            <td><a href="/spec-collector/" rel="cito:citesForInformation">Specification of the Collector component.</a></td>
            <td><a href="https://github.com/mellonscholarlycommunication/spec-collector">spec-collector</a></td>
            <td>Working Draft</td>
            <td>Draft Technical Report</td>
            <td>Technical Report</td>
            <td>2022</td>
        </tr>
    </tbody>

    <tfoot>
        <tr>
        <td colspan="6"></td>
        </tr>
    </tfoot>

</table>

Definitions {#definitions}
===========

The following terms are used across all specifications:

## Core concepts

: <dfn export>Actor</dfn>
:: An entity (person, application or service) that actively participates in the network, holds a addressable network identity.
: <dfn export>Artefact</dfn>
:: A web resource such as a file or document that serves as the object of exchange between [=actors=] and therefore is the smallest divisible unit on the network.
: <dfn export>Artefact Lifecycle Event</dfn>
:: An event that resulted from an [=actor=] performing an activity related to an [=artefact=] that impacts its lifecycle.

## Types of actors

: <dfn export>Agent</dfn>
:: An entity that operates directly on the network.
: <dfn export>Human Agent</dfn>
:: A person that operates directly as an [=actor=] on the network.
: <dfn export>Software Agent</dfn>
:: A software application that operates on an [=actor=]'s behalf.
: <dfn export>Autonomous Agent</dfn>
:: An [=software agent=] that operates on an [=actor=]'s behalf but without any interference of that [=actor=].
: <dfn export>Maintainer</dfn>
:: A [=human agent=] that can manually perform actions on the network using a [=dashboard=] application.
:: Usually a person employed by an organization (e.g., a Cultural Heritage Institution) to maintain data and datasets owned by that organization.

## Actor roles

: <dfn export>Data Pod</dfn>
:: As defined by [[solid-protocol]], a [[solid-protocol#data-pod|Data Pod]] is a place for storing web resources, with mechanisms for controlling who can access what.
: <dfn export>Service Hub</dfn>
:: An [=actor=] that provides a services on [=artefacts=] that are made available in the network. It is a application that serves an LDN [=inbox=].
: <dfn export>Dashboard</dfn>
:: A user-facing [=software agent=] and [[solid-protocol#solid-app|Solid App]] that enables [=human agents=] to interact with the contents of the [=Data Pod=], the [=Orchestrator=], or other [=Actors=] in the network.
: <dfn export>Orchestrator</dfn>
:: An [=autonomous agent=] dedicated to a single [=data pod=], [=service hub=], or any other actor hosting the [=artefact lifecycle event log=] and a [=inbox=] resources. It interprets and executes business rules described in a [=rulebook=].
: <dfn export>Collector</dfn>
:: An [=autonomous agent=] that asynchronously collects information from [=artefact lifecycle event logs=] hosted by [=data pods=], [=service hubs=], or any other actor.

## Resources

: <dfn export>Inbox</dfn>
:: An [[!LDP]] resource where actors can POST [[!LDN|Linked Data Notifications]] in order to send information pertaining an [=artefact=] to another [=actor=], including [=artefact lifecycle event=] information.
: <dfn export>Artefact Lifecycle Event Log</dfn>
:: An HTTP resource served by an actor (e.g., as a resource in the [=data pod=]) that represents a log of past [=artefact lifecycle events=] related to [=artefacts=] known by the [=actor=].
:: Artefacts are considered known when they reside in the actor's [=data pod=] or if the actor has been made aware via [[!LDN]].
: <dfn export>Rulebook</dfn>
:: A set of machine-readable business rules that instruct the [=orchestrator=] on what actions to take in response to a trigger such as incoming notifications, perceived changes in the data, or manual invocation by an [=actor=].


Dashboard and Orchestrator {#differences}
=======================================================

In our specifications two agents interact directly with the [=Data Pod=] with different privileges: the [=Orchestrator=],
and the [=Dashboard=]. While in real applications these agents could overlap or might not be required at all (in
some use cases), in our specifications they are treated as separate entities to help the discussion. Some reasons why
these Actors could be treated as separate entities:

- privileges needed to access the [=Data Pod=]
- requirements needed to receive direct feedback from a [=Human Agent=]
- requirements needed to permanently be **online**
- requirements needed to correctly implement the [=Linked Data Notification=] protocol and [=Rulebooks=]

With this regard:

<table>
  <tr>
    <th>Dashboard
    <td>
    The [=Dashboard=] is a [=Software Agent=] that responds to feedback from an [=Human Agent=]. Typically this [=Dashboard=] runs in a browser
    can be in an online or offline modus when a browser is running on the computer of the maintainer with one of the browser
    tabs opened with the dashboard application.
  <tr>
    <th>Orchestrator
    <td>
    The [=Orchestrator=] is an [=Autonomous Agent=] that can read the (Scholarly) [=Inbox=] of the [=Data Pod=] and append to
    the [=Artefact Lifecycle Event Log=]. Guided by the [=Rulebook=], 
    the [=Orchestrator=] communicates with the network using
    the [=Linked Data Notifications=].
</table>

The network below demonstrates the CRUD privileges imagined for the different actors in this document. The first
network demonstrates a typical Solid setup where the Dashboard is a single page application that has direct access
to the Data Pod. The Orchestrator is a software compontent that could be part of the Dashboard 
process, but in general is meant to be running as seperate network service, always online
working on behalf of the Data Pod Maintainer. There can be other applications in the 
network (indicated by Something) that can read data from the Data Pod or send notifications to
the Data Pod, but without requiring direct privileges to change artefacts on the Data Pod.

<div><img src="images/mellon-crud-app.svg" width="80%"></div>
<i>CRUD operations in case the DashBoard is single-page application and Orchestrator a background task</i>

The second network demonstrates a more classic setup with a browser Dashboard controlled by a server App which uses a
Data Pod as backend storage.

<div><img src="images/mellon-crud.svg" width="80%"></div>
<i>CRUD operations in case the Dashoard and a Server App (which includes an 
Orchestrator component) is a classic client/server application</i>


Communication between Data Pods and domain-specific networks
============================================================



## Communication between Data Pod and Scholarly Community network

Notifications can be sent from the researcher environment to [=Service Hub=] environments.
For instance, in case of a request to review an artefact that resides in the [=Data Pod=], an
appropriate notification can be sent to a review [=Service Hub=]. The [=Service Hub=] can respond,
for example, accepting or rejecting the review request, and, in the latter case, to relay
the result of the review.

The [=Orchestrator=] sends notifications in response to triggers that result from the execution of
the rulebook is associated with the [=Data Pod=]. The [=Orchestrator=]
receives notifications in response to the ones it sent. The [=Orchestrator=] selectively records information
contained in both outgoing and incoming notifications in the [=Artefact Lifecycle Event Log=].

The notifications are regarded as a high-level approach to automatically coordinate the distributed
execution of the crucial functions of scholarly communication. The notifications merely ensure that the
respective functions are in effect executed as prescribed by the rulebook, but do not attempt to
automate the actual fulfillment of the function itself. For instance, when an `Offer` is sent to a Review Service
we don't envision that message contains all the steps to fully automate the submission process.
It could contain enough metadata to enable simple workflows. In general out of band communication
could be needed to perform all required steps.

All notifications are send to all [=Actors=] in the network in the form of
Linked Data Notifications [[!LDN]] using the [[!activitystreams-vocabulary|ActivityStreams 2.0]] vocabulary.

## Communication between Data Pod and Cultural Heritage network

In the digital heritage domain, 
institutions that manage collections, such as museums or libraries, and
service providers, such as object registrars, user-facing portals or digital archives,
participate in a joint network with the goal of sharing digital metadata and objects effectively.
Institutions maintain a [=Data Pod=] as primary exchange hub for metadata about their collections.
End-user portals aims to collect thematic subsets from this selection of pods.
In between, there is a layer of facilitating services that 

- make data findable for portals and other applications, such as indexing metadata for search or disseminating collection information to other network members;
- provide value-added services to institutions like enriching metadata by adding links to other collections, or doing digital preservation.

Institutions use notifications to request services from the designated [=Service Hub=], eg. they can `Offer` a dataset to a enrichment service. 
In addition, notifications are used by all parties to inform each other about relevant changes.
A [=Service Hub=] can respond with, for example, an accept or reject of the request for digital preservation, or simply take note.
The result of a service, ie. the object is preserved digitally for the long term, is a new piece of metadata that augments the object's lifecycle.
This event can be communicated with a new notification to the institution that made the requested or other interested [=actors=] in the network. 

Driven by a mix of policy derived from institutional and cooperation requirements,
institutions follow processes that dictate when to request certain services, contact other [=actors=] and in what order.
These processes can be declared in a [=rulebook=] and executed in an automated manner by an [=Orchestrator=].

Services that help the chasm between the [=Data Pod=] and data consuming portals, can maintain a [=Data Pod=] of their own, 
for storing and exposing derivatives to upper layers in the network. 
For instance, 
a [=Service Hub=] that collects datasets from institution's [=Data Pods=] to generate dataset summaries and enrichments can store these results.
In turn, an end-user portal can use the data of this [=Service Hub=] to find [=Data Pods=] with relevant data. 


<pre class=biblio>
{
	"solid-protocol": {
		"authors": [
			"Sarven Capadisli",
			"Tim Berners-Lee",
			"Ruben Verborgh",
			"Kjetil Kjernsmo",
			"Justin Bingham",
			"Dmitri Zagidulin"
		],
		"href": "https://solidproject.org/TR/protocol/",
		"title": "The Solid Protocol",
		"status": "Editorâ€™s Draft",
		"publisher": "Solid project",
		"deliveredBy": [
			"https://www.w3.org/community/solid/"
		]
	},
  "solid-tr": {
		"href": "https://solidproject.org/TR/",
		"title": "Solid Technical Reports",
		"publisher": "Solid project",
		"deliveredBy": [
			"https://www.w3.org/community/solid/"
		]
	}
}
</pre>

# Acknowledgement

We thank Herbert Van de Sompel, [DANS + Ghent University](https://dans.knaw.nl/nl/), hvdsomp@gmail.com
for the valuable input during this project.